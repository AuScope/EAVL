<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


<!--     <context:component-scan base-package="org.auscope" />
 -->

    <tx:annotation-driven />

    <bean id="propertyConfigurer"
        class="org.auscope.portal.core.server.PortalPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
                <value>#{contextParameters['envPropertiesLocation'] ?:
                    'classpath:env.properties'}
                </value>
            </list>
        </property>
    </bean>

    <cache:annotation-driven />
    <bean id="cacheManager"
        class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cache-manager-ref="ehcache" />

    <bean id="ehcache"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:config-location="ehcache.xml" />

    <bean id="wpsClient"
        class="org.auscope.portal.server.web.service.wps.WpsServiceClient"
        scope="prototype" lazy-init="true" />

    <bean id="fileStagingService"
        class="org.auscope.portal.core.services.cloud.FileStagingService">
        <constructor-arg name="stagingInformation">
            <bean class="org.auscope.portal.core.cloud.StagingInformation">
                <constructor-arg name="stageInDirectory"
                    value="${HOST.localStageInDir}" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>


    <bean id="vmPoolPersister"
        class="org.auscope.portal.server.web.service.wps.FileVmPoolPersister">
        <constructor-arg name="propertyConfigurer" ref="propertyConfigurer" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="wpsVmDao"
        class="org.auscope.portal.server.web.service.wps.DbVmPoolPersister">
    </bean>

    <bean id="vmPool" class="org.auscope.portal.server.web.service.wps.VmPool">
        <constructor-arg name="persistor" ref="vmPoolPersister" />
        <constructor-arg name="wpsVmDao"  ref="wpsVmDao" />
        <constructor-arg name="accessKey"
            value="${env.nectar.ec2.accesskey}" />
        <constructor-arg name="secretKey"
            value="${env.nectar.ec2.secretkey}" />
        <constructor-arg name="executor" ref="executor" />
        <property name="skippedZones">
            <set>
                <value>monash</value>
                <value>monash-test</value>
                <value>monash-01</value>
                <value>monash-02</value>
                <value>melbourne</value>
                <value>melbourne-qh2</value>
                <value>tasmania</value>
                <value>tasmania-s</value>
            </set>
        </property>
        <property name="vmPoolSize" value="2" />
    </bean>

    <bean id="wpsService" class="org.auscope.portal.server.web.service.WpsService">
        <constructor-arg name="vmPool" ref="vmPool" />
    </bean>

    <bean name="emailListener"
        class="org.auscope.portal.server.web.service.jobtask.EmailListener">
        <constructor-arg name="mailSender">
            <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
                <property name="host" value="${HOST.smtp.server}" />
            </bean>
        </constructor-arg>
        <constructor-arg name="velocityEngine">
            <bean
                class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
                <property name="velocityProperties">
                    <value>
                        resource.loader=class
                        class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                    </value>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg name="templateFilePath"
            value="org/auscope/portal/server/web/service/jobtask/task-completion.tpl" />
        <constructor-arg name="templateFileEncoding"
            value="UTF-8" />
        <constructor-arg name="emailSender">
            <value><![CDATA[EAVL Admin <noreply-cg-admin@csiro.au>]]></value>
        </constructor-arg>
    </bean>

    <!-- This is the core threadpool shared by object instances throughout
        the portal -->
    <!-- <bean id="executorFactory" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="5" /> <property name="maxPoolSize" value="5"
        /> <property name="queueCapacity" value="25" /> </bean> <bean id="executor"
        factory-bean="executorFactory" factory-method="getObject"> </bean> -->

    <bean id="executor"
        class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="5" />
        <property name="queueCapacity" value="25" />
    </bean>

    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        p:driverClassName="org.postgresql.Driver" p:url="jdbc:postgresql://localhost:5432/eavl"
        p:username="eavl" p:password="eavl4312" />


    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory" />


    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource">
        <property name="persistenceUnitName" value="eavlPersists" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>

        <property name="packagesToScan">
            <list>
                <value>org.auscope.*</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.ProgressDialect
                </prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    <!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter">
        <property name="targetDataSource" ref="targetDataSource" /> </bean> <bean
        id="targetDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:/comp/env/jdbc/psql/eavl" /> </bean> -->
</beans>